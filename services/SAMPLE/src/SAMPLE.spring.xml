<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.zscuh.sample.controller,com.zscuh.sample.service,com.zscuh.sample.dao"/>
    <bean class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>
                    classpath:SAMPLE.properties
                </value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean id="SAMPLEHikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="jdbcUrl" value="${SAMPLE.url}"/>
        <property name="driverClassName" value="${SAMPLE.driverClass}"/>
        <property name="username" value="${SAMPLE.username}"/>
        <property name="password" value="${SAMPLE.password}"/>
        <property name="maximumPoolSize" value="${SAMPLE.maxPoolSize}"/>
        <property name="minimumIdle" value="${SAMPLE.minPoolSize}"/>
        <property name="connectionTimeout" value="30000" />
        <property name="validationTimeout" value="5000" />
        <property name="idleTimeout" value="600000" />
        <property name="maxLifetime" value="1800000" />
        <property name="initializationFailTimeout" value="-1" />
        <property name="leakDetectionThreshold" value="120000" />
        <property name="registerMbeans" value="false" />
    </bean>

    <bean id="SAMPLEWMManagedDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close" lazy-init="true">
        <constructor-arg ref="SAMPLEHikariConfig"/>
    </bean>

    <bean id="SAMPLEEntityInterceptor" class="com.wavemaker.runtime.data.interceptors.WMEntityInterceptor"/>

    <bean id="SAMPLESessionFactory" class="com.wavemaker.runtime.data.factory.TypeResolverSessionFactoryBean">
        <property name="dataSource" ref="SAMPLEDataSource"/>
        <property name="packagesToScan" value="com.zscuh.sample"/>
        <property name="entityInterceptor" ref="SAMPLEEntityInterceptor"/>
        <property name="mappingResources">
            <list>
                <value>
                SAMPLE-queries.hbm.xml
                </value>
            </list>
        </property>

        <property name="customTypes">
            <array value-type="com.wavemaker.runtime.data.CustomType">
                <ref bean="dateTimeCustomType"/>
            </array>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                ${SAMPLE.dialect}
                </prop>
                <prop key="hibernate.default_schema">
                ${SAMPLE.schemaName}
                </prop>
                <prop key="hibernate.show_sql">
                    false
                </prop>
                <prop key="hibernate.globally_quoted_identifiers">
                    false
                </prop>
                <prop key="hibernate.hbm2ddl.auto">
                ${SAMPLE.hbm2ddl}
                </prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">
                    false
                </prop>
                <prop key="hibernate.schema_update.unique_constraint_strategy">
                    skip
                </prop>
            </props>
        </property>
    </bean>
    <bean id="SAMPLETransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="SAMPLESessionFactory"/>
        <property name="defaultTimeout" value="${SAMPLE.transactionTimeout}"/>
    </bean>
    <bean id="SAMPLETemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="SAMPLESessionFactory"/>
    </bean>
    <bean id="SAMPLEWMQueryExecutor" class="com.wavemaker.runtime.data.dao.query.WMQueryExecutorImpl">
        <property name="template" ref="SAMPLETemplate"/>
    </bean>
    <bean id="SAMPLEWMProcedureExecutor" class="com.wavemaker.runtime.data.dao.procedure.WMProcedureExecutorImpl">
        <property name="template" ref="SAMPLETemplate"/>
        <property name="serviceId" value="SAMPLE" />
    </bean>

    <bean id="persistentLocalDateTimeType" class="com.wavemaker.commons.data.type.WMPersistentLocalDateTime"/>
    <bean id="dateTimeCustomType" class="com.wavemaker.runtime.data.CustomType">
        <property name="type" ref="persistentLocalDateTimeType"/>
        <property name="keys">
            <list>
                <value>DateTime</value>
                <value>org.joda.time.LocalDateTime</value>
            </list>
        </property>
    </bean>
    <bean id="SAMPLEPageableHandlerMethodResolver" class="com.wavemaker.runtime.resolver.WMPageableHandlerMethodArgumentResolver" >
        <property name="pageParameterName" value="page"/>
        <property name="sizeParameterName" value="size"/>
        <property name="oneIndexedParameters" value="true"/>
        <property name="maxPageSize" value="${SAMPLE.maxPageSize}"/>
        <property name="fallbackPageable">
            <bean  class="org.springframework.data.domain.PageRequest">
                <constructor-arg  value="0"/>
                <constructor-arg  value="20"/>
            </bean>
        </property>
    </bean>

    <bean id="SAMPLEDataSource" class="com.wavemaker.runtime.data.datasource.WMDataSource">
        <property name="dataSourceType" value="${SAMPLE.dataSourceType}"/>
        <property name="jndiName" value="${SAMPLE.jndiName}"/>
        <property name="serviceId" value="SAMPLE"/>
    </bean>


    <tx:annotation-driven/>

</beans>

